@using Management.WebUI.Components.Pages.Auth
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavMan
@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)">
                <Authorizing>
                    Please wait...
                </Authorizing>
                <NotAuthorized>
                    @if (!routeData.PageType.IsAssignableTo(typeof(Login)))
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <RouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)" />
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        </Found>
        <NotFound>
            <p>Sorry, there's nothing at this address.</p>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private void RedirectToLogin()
    {
        NavMan.NavigateTo("/login");
    }
}
